{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-f3eeb9ae\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"로딩 중...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.menus, (menu, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(menu), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]))]);\n}","map":{"version":3,"names":["key","_createElementBlock","$data","loading","_hoisted_1","_hoisted_2","_createElementVNode","_Fragment","_renderList","menus","menu","index","_toDisplayString","error","_hoisted_3","_createCommentVNode"],"sources":["C:\\Users\\Asus\\Desktop\\school\\project\\Timetable\\NUTS\\src\\components\\LunchMenu.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"loading\">로딩 중...</div>\r\n    <div v-else>\r\n      <ul>\r\n        <li v-for=\"(menu, index) in menus\" :key=\"index\">{{ menu }}</li>\r\n      </ul>\r\n      <div v-if=\"error\">{{ error }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      menus: [],\r\n      error: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchLunchMenu() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"\thttps://open.neis.go.kr/hub/mealServiceDietInfo?ATPT_OFCDC_SC_CODE=N10&SD_SCHUL_CODE=814026\",\r\n          {\r\n            params: {\r\n              KEY: \"24f66fdc96aa43d180bceac32e6205f7\", // 공공데이터 포털에서 발급받은 API 키\r\n              Type: \"json\", // 응답 형식\r\n              ATPT_OFCDC_SC_CODE: \"N10\", // 시도교육청코드 (예: 충청남도교육청)\r\n              SD_SCHUL_CODE: \"8140246\", // 학교 코드 (예: 천안오성고)\r\n              MMEAL_SC_CODE: \"2\", // 급식 유형 코드 (2: 중식)\r\n              MLSV_YMD: new Date().toISOString().split(\"T\")[0], // 오늘 날짜\r\n            },\r\n          }\r\n        );\r\n        console.log(\"API 응답:\", response);\r\n        if (response.data.mealServiceDietInfo) {\r\n          this.menus = response.data.mealServiceDietInfo[1].row.map(\r\n            (menu) => menu.DDISH_NM\r\n          );\r\n        } else {\r\n          this.error = \"No meal service data found\";\r\n        }\r\n      } catch (error) {\r\n        console.error(\"API request error:\", error);\r\n        this.error = `API 요청 중 오류 발생: ${error.message}`;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchLunchMenu();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 스타일을 여기에 추가하세요 */\r\n</style>\r\n"],"mappings":";;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAQM,cAPOC,KAAA,CAAAC,OAAO,I,cAAlBF,mBAAA,CAAiC,OAFrCG,UAAA,EAEwB,SAAO,M,cAC3BH,mBAAA,CAKM,OARVI,UAAA,GAIMC,mBAAA,CAEK,c,kBADHL,mBAAA,CAA+DM,SAAA,QALvEC,WAAA,CAKoCN,KAAA,CAAAO,KAAK,EALzC,CAKoBC,IAAI,EAAEC,KAAK;yBAAvBV,mBAAA,CAA+D;MAA3BD,GAAG,EAAEW;IAAK,GAAAC,gBAAA,CAAKF,IAAI;oCAE9CR,KAAA,CAAAW,KAAK,I,cAAhBZ,mBAAA,CAAmC,OAPzCa,UAAA,EAAAF,gBAAA,CAO2BV,KAAA,CAAAW,KAAK,oBAPhCE,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}