{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\r\nCopyright 2019 -2020 박찬솔\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\n\nconst list = require(\"../types/EduURILists\");\nconst request = require(\"../request/Request\");\nconst SchoolSearched = require(\"./school/SchoolSearched\");\nlet result = {\n  ALL: {}\n};\nfor (let edu in list) {\n  result[edu] = {};\n}\n\n/**\r\n * @param {string}      name                검색할 이름\r\n * @param {string}      edu                 교육청 이름 (전체 검색의 경우는 `ALL`)\r\n * @param {boolean}     refresh             true면 재검색합니다.\r\n * @returns {Promise<SchoolSearched[]>}\r\n */\nconst search = async (name, edu = 'ALL', refresh = false) => {\n  return new Promise(async resolve => {\n    if (result[edu][name] !== undefined && !refresh) {\n      resolve(result[edu][name].slice(0));\n    }\n    resolve((await fetchData(name, edu)).slice(0));\n  });\n};\n\n/**\r\n *\r\n * @returns {Promise<SchoolSearched[]>}\r\n */\nconst fetchData = async (searchString, code) => {\n  let complete = [],\n    res = [];\n  let search = async code => {\n    let response = await request(\"spr_ccm_cm01_100.ws\", code, {\n      kraOrgNm: searchString\n    });\n    if (response.status !== 200) {\n      return [];\n    }\n    response = response.data;\n    if (response !== null && response.resultSVO !== undefined && response.resultSVO.orgDVOList !== undefined) {\n      let lists = response.resultSVO.orgDVOList;\n      for (let data of lists) {\n        data = data.data;\n        res.push(new SchoolSearched(code, data.orgCode, parseInt(data.schulCrseScCode), data.kraOrgNm, data.zipAdres));\n      }\n    }\n    return res;\n  };\n  if (code === 'ALL') {\n    for (let code in list) {\n      complete.push(search(code, true));\n    }\n    return Promise.all(complete).then(() => result[code][searchString] = res);\n  } else {\n    return result[code][searchString] = await search(code);\n  }\n};\nmodule.exports = search;","map":{"version":3,"names":["list","require","request","SchoolSearched","result","ALL","edu","search","name","refresh","Promise","resolve","undefined","slice","fetchData","searchString","code","complete","res","response","kraOrgNm","status","data","resultSVO","orgDVOList","lists","push","orgCode","parseInt","schulCrseScCode","zipAdres","all","then","module","exports"],"sources":["C:/Users/Asus/Desktop/school/project/Timetable/NUTS/node_modules/neis/src/class/SchoolSearch.js"],"sourcesContent":["/*\r\nCopyright 2019 -2020 박찬솔\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nconst list = require(\"../types/EduURILists\");\r\nconst request = require(\"../request/Request\");\r\nconst SchoolSearched = require(\"./school/SchoolSearched\");\r\n\r\nlet result = {ALL: {}};\r\n\r\nfor (let edu in list) {\r\n\tresult[edu] = {};\r\n}\r\n\r\n/**\r\n * @param {string}      name                검색할 이름\r\n * @param {string}      edu                 교육청 이름 (전체 검색의 경우는 `ALL`)\r\n * @param {boolean}     refresh             true면 재검색합니다.\r\n * @returns {Promise<SchoolSearched[]>}\r\n */\r\nconst search = async (name, edu = 'ALL', refresh = false) => {\r\n\treturn new Promise(async (resolve) => {\r\n\t\tif (result[edu][name] !== undefined && !refresh) {\r\n\t\t\tresolve(result[edu][name].slice(0));\r\n\t\t}\r\n\r\n\t\tresolve((await fetchData(name, edu)).slice(0));\r\n\t});\r\n};\r\n\r\n/**\r\n *\r\n * @returns {Promise<SchoolSearched[]>}\r\n */\r\nconst fetchData = async (searchString, code) => {\r\n\tlet complete = [], res = [];\r\n\r\n\tlet search = async (code) => {\r\n\t\tlet response = await request(\"spr_ccm_cm01_100.ws\", code, {kraOrgNm: searchString});\r\n\r\n\t\tif (response.status !== 200) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tresponse = response.data;\r\n\t\tif (response !== null && response.resultSVO !== undefined && response.resultSVO.orgDVOList !== undefined) {\r\n\t\t\tlet lists = response.resultSVO.orgDVOList;\r\n\t\t\tfor (let data of lists) {\r\n\t\t\t\tdata = data.data;\r\n\t\t\t\tres.push(new SchoolSearched(code, data.orgCode, parseInt(data.schulCrseScCode), data.kraOrgNm, data.zipAdres));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t};\r\n\r\n\tif (code === 'ALL') {\r\n\t\tfor (let code in list) {\r\n\t\t\tcomplete.push(search(code, true));\r\n\t\t}\r\n\r\n\t\treturn Promise.all(complete).then(() => result[code][searchString] = res);\r\n\t} else {\r\n\t\treturn result[code][searchString] = await search(code);\r\n\t}\r\n};\r\n\r\nmodule.exports = search;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC5C,MAAMC,OAAO,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAC7C,MAAME,cAAc,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAEzD,IAAIG,MAAM,GAAG;EAACC,GAAG,EAAE,CAAC;AAAC,CAAC;AAEtB,KAAK,IAAIC,GAAG,IAAIN,IAAI,EAAE;EACrBI,MAAM,CAACE,GAAG,CAAC,GAAG,CAAC,CAAC;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAG,MAAAA,CAAOC,IAAI,EAAEF,GAAG,GAAG,KAAK,EAAEG,OAAO,GAAG,KAAK,KAAK;EAC5D,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAK;IACrC,IAAIP,MAAM,CAACE,GAAG,CAAC,CAACE,IAAI,CAAC,KAAKI,SAAS,IAAI,CAACH,OAAO,EAAE;MAChDE,OAAO,CAACP,MAAM,CAACE,GAAG,CAAC,CAACE,IAAI,CAAC,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;IACpC;IAEAF,OAAO,CAAC,CAAC,MAAMG,SAAS,CAACN,IAAI,EAAEF,GAAG,CAAC,EAAEO,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/C,CAAC,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAAG,MAAAA,CAAOC,YAAY,EAAEC,IAAI,KAAK;EAC/C,IAAIC,QAAQ,GAAG,EAAE;IAAEC,GAAG,GAAG,EAAE;EAE3B,IAAIX,MAAM,GAAG,MAAOS,IAAI,IAAK;IAC5B,IAAIG,QAAQ,GAAG,MAAMjB,OAAO,CAAC,qBAAqB,EAAEc,IAAI,EAAE;MAACI,QAAQ,EAAEL;IAAY,CAAC,CAAC;IAEnF,IAAII,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC5B,OAAO,EAAE;IACV;IAEAF,QAAQ,GAAGA,QAAQ,CAACG,IAAI;IACxB,IAAIH,QAAQ,KAAK,IAAI,IAAIA,QAAQ,CAACI,SAAS,KAAKX,SAAS,IAAIO,QAAQ,CAACI,SAAS,CAACC,UAAU,KAAKZ,SAAS,EAAE;MACzG,IAAIa,KAAK,GAAGN,QAAQ,CAACI,SAAS,CAACC,UAAU;MACzC,KAAK,IAAIF,IAAI,IAAIG,KAAK,EAAE;QACvBH,IAAI,GAAGA,IAAI,CAACA,IAAI;QAChBJ,GAAG,CAACQ,IAAI,CAAC,IAAIvB,cAAc,CAACa,IAAI,EAAEM,IAAI,CAACK,OAAO,EAAEC,QAAQ,CAACN,IAAI,CAACO,eAAe,CAAC,EAAEP,IAAI,CAACF,QAAQ,EAAEE,IAAI,CAACQ,QAAQ,CAAC,CAAC;MAC/G;IACD;IAEA,OAAOZ,GAAG;EACX,CAAC;EAED,IAAIF,IAAI,KAAK,KAAK,EAAE;IACnB,KAAK,IAAIA,IAAI,IAAIhB,IAAI,EAAE;MACtBiB,QAAQ,CAACS,IAAI,CAACnB,MAAM,CAACS,IAAI,EAAE,IAAI,CAAC,CAAC;IAClC;IAEA,OAAON,OAAO,CAACqB,GAAG,CAACd,QAAQ,CAAC,CAACe,IAAI,CAAC,MAAM5B,MAAM,CAACY,IAAI,CAAC,CAACD,YAAY,CAAC,GAAGG,GAAG,CAAC;EAC1E,CAAC,MAAM;IACN,OAAOd,MAAM,CAACY,IAAI,CAAC,CAACD,YAAY,CAAC,GAAG,MAAMR,MAAM,CAACS,IAAI,CAAC;EACvD;AACD,CAAC;AAEDiB,MAAM,CAACC,OAAO,GAAG3B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}